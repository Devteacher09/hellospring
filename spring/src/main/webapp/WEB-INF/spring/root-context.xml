<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 
		DB접속을 위한 bean을 등록하기
		1. Data연결정보를 저장하는 클래스 -> BasicDataSource클래스
		2. SqlSession을 생성해주는 클래스(환경설정) -> SqlSessionFacotryBean클래스
		3. SqlSession클래스 -> SqlSessionTemplate클래스
	 -->
	 <bean id="dataSource" 
	 	class="org.apache.commons.dbcp.BasicDataSource" 
	 	destroy-method="close">
	 	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	 	<property name="url" value="jdbc:oracle:thin:@14.36.141.71:8877:xe"/>
	 	<property name="username" value="spring"/>
	 	<property name="password" value="spring"/>
	 </bean>
	 <bean id="proxyDataSource" 
	 	class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
	 	<constructor-arg index="0" ref="dataSource"/>
	 	<property name="logFormatter">
	 		<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
	 			<property name="loggingType" value="MULTI_LINE"/>
	 			<property name="sqlPrefix" value="[SQL]"/>
	 		</bean>
	 	</property>
	 </bean>
	 <bean id="sqlSessionFactory"
	 	class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<property name="dataSource" ref="proxyDataSource"/>
	 	<property name="configLocation" value="classpath:mybatis-config.xml"/>
	 	<property name="mapperLocations" value="classpath:mappers/**/*.xml"/>	
	 </bean>
	
	
	 <bean id="sqlSessionTemplate"
	 	class="org.mybatis.spring.SqlSessionTemplate">
	 	<constructor-arg index="0" ref="sqlSessionFactory"/>
	 </bean>
	 
	 
	 
	 <!-- 트렌젝션처리하기 -->
	 <bean id="transacationManager" 
	 	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 	<property name="dataSource" ref="proxyDataSource"/>
	 </bean>
	 
	 <!-- 어노테이션으로 처리하기 -->
	 <!-- <tx:annotation-driven transaction-manager="transacationManager"/> -->
	 <!-- xml방식으로 처리하기 -->
	 <tx:advice id="txadvice" transaction-manager="transacationManager">
	 	<tx:attributes>
	 		<tx:method name="insert*" />
	 	</tx:attributes>
	 </tx:advice>
	 
	 <aop:config>
	 	<aop:pointcut expression="within(com.bs.spring.board.model.service.*Impl)" id="trans"/>
	 	<aop:advisor advice-ref="txadvice" pointcut-ref="trans"/>
	 </aop:config>
	 
	 
</beans>		






